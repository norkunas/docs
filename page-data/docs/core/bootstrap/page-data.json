{"componentChunkName":"component---src-templates-doc-js","path":"/docs/core/bootstrap/","result":{"pageContext":{"html":"<h1 id=\"bootstraping-the-core-library\" style=\"position:relative;\"><a href=\"#bootstraping-the-core-library\" aria-label=\"bootstraping the core library permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bootstraping the core library</h1>\n<p>You may want to run a minimal version of API Platform. This one file runs API Platform (without graphql, doctrine and mongodb).\nIt requires the following composer packages:</p>\n<div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">composer require \\\n    api-platform/core \\\n    doctrine/annotations \\\n    doctrine/common \\\n    phpdocumentor/reflection-docblock \\\n    symfony/property-info \\\n    symfony/routing</code></pre></div>\n<p>The minimal version of API Platform:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">require</span> <span class=\"token string single-quoted-string\">'./vendor/autoload.php'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Action<span class=\"token punctuation\">\\</span>EntrypointAction</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Action<span class=\"token punctuation\">\\</span>ExceptionAction</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Action<span class=\"token punctuation\">\\</span>PlaceholderAction</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Api<span class=\"token punctuation\">\\</span>IdentifiersExtractor</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Api<span class=\"token punctuation\">\\</span>IdentifiersExtractorInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Api<span class=\"token punctuation\">\\</span>OperationType</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Api<span class=\"token punctuation\">\\</span>ResourceClassResolver</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Api<span class=\"token punctuation\">\\</span>UrlGeneratorInterface</span> <span class=\"token keyword\">as</span> ApiUrlGeneratorInterface<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Bridge<span class=\"token punctuation\">\\</span>Symfony<span class=\"token punctuation\">\\</span>Routing<span class=\"token punctuation\">\\</span>RouteNameGenerator</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Bridge<span class=\"token punctuation\">\\</span>Symfony<span class=\"token punctuation\">\\</span>Validator<span class=\"token punctuation\">\\</span>EventListener<span class=\"token punctuation\">\\</span>ValidationExceptionListener</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Documentation<span class=\"token punctuation\">\\</span>DocumentationInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>EventListener<span class=\"token punctuation\">\\</span>AddFormatListener</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>EventListener<span class=\"token punctuation\">\\</span>DeserializeListener</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>EventListener<span class=\"token punctuation\">\\</span>ExceptionListener</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>EventListener<span class=\"token punctuation\">\\</span>ReadListener</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>EventListener<span class=\"token punctuation\">\\</span>WriteListener</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Bridge<span class=\"token punctuation\">\\</span>Symfony<span class=\"token punctuation\">\\</span>PropertyInfo<span class=\"token punctuation\">\\</span>Metadata<span class=\"token punctuation\">\\</span>Property<span class=\"token punctuation\">\\</span>PropertyInfoPropertyMetadataFactory</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Bridge<span class=\"token punctuation\">\\</span>Symfony<span class=\"token punctuation\">\\</span>PropertyInfo<span class=\"token punctuation\">\\</span>Metadata<span class=\"token punctuation\">\\</span>Property<span class=\"token punctuation\">\\</span>PropertyInfoPropertyNameCollectionFactory</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Bridge<span class=\"token punctuation\">\\</span>Symfony<span class=\"token punctuation\">\\</span>Routing<span class=\"token punctuation\">\\</span>IriConverter</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Bridge<span class=\"token punctuation\">\\</span>Symfony<span class=\"token punctuation\">\\</span>Routing<span class=\"token punctuation\">\\</span>RouteNameResolver</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>DataPersister<span class=\"token punctuation\">\\</span>DataPersisterInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>DataProvider<span class=\"token punctuation\">\\</span>ContextAwareCollectionDataProviderInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>DataProvider<span class=\"token punctuation\">\\</span>DenormalizedIdentifiersAwareItemDataProviderInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>DataProvider<span class=\"token punctuation\">\\</span>PaginationOptions</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>DataProvider<span class=\"token punctuation\">\\</span>RestrictedDataProviderInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>EventListener<span class=\"token punctuation\">\\</span>RespondListener</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>EventListener<span class=\"token punctuation\">\\</span>SerializeListener</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Hal<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>CollectionNormalizer</span> <span class=\"token keyword\">as</span> HalCollectionNormalizer<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Hal<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>EntrypointNormalizer</span> <span class=\"token keyword\">as</span> HalEntrypointNormalizer<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Hal<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>ItemNormalizer</span> <span class=\"token keyword\">as</span> HalItemNormalizer<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Hal<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>ObjectNormalizer</span> <span class=\"token keyword\">as</span> HalObjectNormalizer<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Hydra<span class=\"token punctuation\">\\</span>EventListener<span class=\"token punctuation\">\\</span>AddLinkHeaderListener</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Hydra<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>CollectionFiltersNormalizer</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Hydra<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>CollectionNormalizer</span> <span class=\"token keyword\">as</span> HydraCollectionNormalizer<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Hydra<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>ConstraintViolationListNormalizer</span> <span class=\"token keyword\">as</span> HydraConstraintViolationListNormalizer<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Hydra<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>DocumentationNormalizer</span> <span class=\"token keyword\">as</span> HydraDocumentationNormalizer<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Hydra<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>EntrypointNormalizer</span> <span class=\"token keyword\">as</span> HydraEntrypointNormalizer<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Hydra<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>ErrorNormalizer</span> <span class=\"token keyword\">as</span> HydraErrorNormalizer<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Hydra<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>PartialCollectionViewNormalizer</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Identifier<span class=\"token punctuation\">\\</span>IdentifierConverter</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Identifier<span class=\"token punctuation\">\\</span>Normalizer<span class=\"token punctuation\">\\</span>IntegerDenormalizer</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>JsonLd<span class=\"token punctuation\">\\</span>Action<span class=\"token punctuation\">\\</span>ContextAction</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>JsonLd<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>ItemNormalizer</span> <span class=\"token keyword\">as</span> JsonLdItemNormalizer<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>JsonLd<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>ObjectNormalizer</span> <span class=\"token keyword\">as</span> JsonLdObjectNormalizer<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>JsonLd<span class=\"token punctuation\">\\</span>ContextBuilder</span> <span class=\"token keyword\">as</span> JsonLdContextBuilder<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>JsonSchema<span class=\"token punctuation\">\\</span>SchemaFactory</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>JsonSchema<span class=\"token punctuation\">\\</span>TypeFactory</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Metadata<span class=\"token punctuation\">\\</span>Property<span class=\"token punctuation\">\\</span>Factory<span class=\"token punctuation\">\\</span>AnnotationPropertyMetadataFactory</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Metadata<span class=\"token punctuation\">\\</span>Property<span class=\"token punctuation\">\\</span>Factory<span class=\"token punctuation\">\\</span>InheritedPropertyMetadataFactory</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Metadata<span class=\"token punctuation\">\\</span>Property<span class=\"token punctuation\">\\</span>Factory<span class=\"token punctuation\">\\</span>InheritedPropertyNameCollectionFactory</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Metadata<span class=\"token punctuation\">\\</span>Property<span class=\"token punctuation\">\\</span>Factory<span class=\"token punctuation\">\\</span>SerializerPropertyMetadataFactory</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Metadata<span class=\"token punctuation\">\\</span>Resource<span class=\"token punctuation\">\\</span>Factory<span class=\"token punctuation\">\\</span>AnnotationResourceFilterMetadataFactory</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Metadata<span class=\"token punctuation\">\\</span>Resource<span class=\"token punctuation\">\\</span>Factory<span class=\"token punctuation\">\\</span>AnnotationResourceMetadataFactory</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Metadata<span class=\"token punctuation\">\\</span>Resource<span class=\"token punctuation\">\\</span>Factory<span class=\"token punctuation\">\\</span>AnnotationResourceNameCollectionFactory</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Metadata<span class=\"token punctuation\">\\</span>Resource<span class=\"token punctuation\">\\</span>Factory<span class=\"token punctuation\">\\</span>FormatsResourceMetadataFactory</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Metadata<span class=\"token punctuation\">\\</span>Resource<span class=\"token punctuation\">\\</span>Factory<span class=\"token punctuation\">\\</span>InputOutputResourceMetadataFactory</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Metadata<span class=\"token punctuation\">\\</span>Resource<span class=\"token punctuation\">\\</span>Factory<span class=\"token punctuation\">\\</span>OperationResourceMetadataFactory</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Metadata<span class=\"token punctuation\">\\</span>Resource<span class=\"token punctuation\">\\</span>Factory<span class=\"token punctuation\">\\</span>ResourceMetadataFactoryInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Metadata<span class=\"token punctuation\">\\</span>Resource<span class=\"token punctuation\">\\</span>Factory<span class=\"token punctuation\">\\</span>ResourceNameCollectionFactoryInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Metadata<span class=\"token punctuation\">\\</span>Resource<span class=\"token punctuation\">\\</span>Factory<span class=\"token punctuation\">\\</span>ShortNameResourceMetadataFactory</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Metadata<span class=\"token punctuation\">\\</span>Resource<span class=\"token punctuation\">\\</span>ResourceMetadata</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>OpenApi<span class=\"token punctuation\">\\</span>Factory<span class=\"token punctuation\">\\</span>OpenApiFactory</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>OpenApi<span class=\"token punctuation\">\\</span>Factory<span class=\"token punctuation\">\\</span>OpenApiFactoryInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>OpenApi<span class=\"token punctuation\">\\</span>Options</span> <span class=\"token keyword\">as</span> OpenApiOptions<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>OpenApi<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>OpenApiNormalizer</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Operation<span class=\"token punctuation\">\\</span>Factory<span class=\"token punctuation\">\\</span>SubresourceOperationFactory</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Operation<span class=\"token punctuation\">\\</span>UnderscorePathSegmentNameGenerator</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>PathResolver<span class=\"token punctuation\">\\</span>OperationPathResolver</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>PathResolver<span class=\"token punctuation\">\\</span>OperationPathResolverInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Problem<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>ConstraintViolationListNormalizer</span> <span class=\"token keyword\">as</span> ProblemConstraintViolationListNormalizer<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Problem<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>ErrorNormalizer</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>ItemNormalizer</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>JsonEncoder</span> <span class=\"token keyword\">as</span> JsonLdEncoder<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>SerializerContextBuilder</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Validator<span class=\"token punctuation\">\\</span>EventListener<span class=\"token punctuation\">\\</span>ValidateListener</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Validator<span class=\"token punctuation\">\\</span>ValidatorInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Doctrine<span class=\"token punctuation\">\\</span>Common<span class=\"token punctuation\">\\</span>Annotations<span class=\"token punctuation\">\\</span>AnnotationReader</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Negotiation<span class=\"token punctuation\">\\</span>Negotiator</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Psr<span class=\"token punctuation\">\\</span>Container<span class=\"token punctuation\">\\</span>ContainerInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>EventDispatcher<span class=\"token punctuation\">\\</span>EventDispatcher</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>HttpFoundation<span class=\"token punctuation\">\\</span>Request</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>HttpFoundation<span class=\"token punctuation\">\\</span>RequestStack</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>HttpFoundation<span class=\"token punctuation\">\\</span>Response</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>HttpKernel<span class=\"token punctuation\">\\</span>Log<span class=\"token punctuation\">\\</span>Logger</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>HttpKernel<span class=\"token punctuation\">\\</span>Controller<span class=\"token punctuation\">\\</span>ArgumentResolver</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>HttpKernel<span class=\"token punctuation\">\\</span>Controller<span class=\"token punctuation\">\\</span>ControllerResolver</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>HttpKernel<span class=\"token punctuation\">\\</span>EventListener<span class=\"token punctuation\">\\</span>ErrorListener</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>HttpKernel<span class=\"token punctuation\">\\</span>EventListener<span class=\"token punctuation\">\\</span>RouterListener</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>HttpKernel<span class=\"token punctuation\">\\</span>HttpKernel</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>PropertyAccess<span class=\"token punctuation\">\\</span>PropertyAccess</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Routing<span class=\"token punctuation\">\\</span>Matcher<span class=\"token punctuation\">\\</span>UrlMatcher</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Routing<span class=\"token punctuation\">\\</span>RequestContext</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Routing<span class=\"token punctuation\">\\</span>Route</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Routing<span class=\"token punctuation\">\\</span>RouteCollection</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>PropertyInfo<span class=\"token punctuation\">\\</span>Extractor<span class=\"token punctuation\">\\</span>PhpDocExtractor</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>PropertyInfo<span class=\"token punctuation\">\\</span>Extractor<span class=\"token punctuation\">\\</span>ReflectionExtractor</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>PropertyInfo<span class=\"token punctuation\">\\</span>PropertyInfoExtractor</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Routing<span class=\"token punctuation\">\\</span>Generator<span class=\"token punctuation\">\\</span>UrlGenerator</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Routing<span class=\"token punctuation\">\\</span>Generator<span class=\"token punctuation\">\\</span>UrlGeneratorInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Routing<span class=\"token punctuation\">\\</span>Matcher<span class=\"token punctuation\">\\</span>UrlMatcherInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Routing<span class=\"token punctuation\">\\</span>RouterInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>Mapping<span class=\"token punctuation\">\\</span>Factory<span class=\"token punctuation\">\\</span>ClassMetadataFactory</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>Mapping<span class=\"token punctuation\">\\</span>Loader<span class=\"token punctuation\">\\</span>AnnotationLoader</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>NameConverter<span class=\"token punctuation\">\\</span>MetadataAwareNameConverter</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>SerializerInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Validator<span class=\"token punctuation\">\\</span>Validation</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>Encoder<span class=\"token punctuation\">\\</span>JsonEncoder</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>Normalizer<span class=\"token punctuation\">\\</span>ArrayDenormalizer</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>Normalizer<span class=\"token punctuation\">\\</span>ConstraintViolationListNormalizer</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>Normalizer<span class=\"token punctuation\">\\</span>DataUriNormalizer</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>Normalizer<span class=\"token punctuation\">\\</span>DateIntervalNormalizer</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>Normalizer<span class=\"token punctuation\">\\</span>DateTimeNormalizer</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>Normalizer<span class=\"token punctuation\">\\</span>DateTimeZoneNormalizer</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>Normalizer<span class=\"token punctuation\">\\</span>JsonSerializableNormalizer</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>Normalizer<span class=\"token punctuation\">\\</span>ObjectNormalizer</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>Normalizer<span class=\"token punctuation\">\\</span>ProblemNormalizer</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>Normalizer<span class=\"token punctuation\">\\</span>UnwrappingDenormalizer</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>Serializer</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$allowPlainIdentifiers</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$debug</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$defaultContext</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$dataTransformers</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$patchFormats</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'json'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'application/merge-patch+json'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'jsonapi'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'application/vnd.api+json'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$formats</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'jsonld'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'application/ld+json'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$errorFormats</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string single-quoted-string\">'jsonproblem'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'application/problem+json'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'jsonld'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'application/ld+json'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'jsonapi'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'application/vnd.api+json'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$configuration</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string single-quoted-string\">'collection'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string single-quoted-string\">'pagination'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string single-quoted-string\">'page_parameter_name'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'page'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string single-quoted-string\">'enabled_parameter_name'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'pagination'</span>\n        <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$exceptionToStatus</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\"># The 4 following handlers are registered by default, keep those lines to prevent unexpected side effects</span>\n    <span class=\"token class-name class-name-fully-qualified static-context\"><span class=\"token punctuation\">\\</span>Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>Exception<span class=\"token punctuation\">\\</span>ExceptionInterface</span><span class=\"token operator\">::</span><span class=\"token keyword\">class</span> <span class=\"token operator\">=></span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span>\n    <span class=\"token class-name class-name-fully-qualified static-context\"><span class=\"token punctuation\">\\</span>ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Exception<span class=\"token punctuation\">\\</span>InvalidArgumentException</span><span class=\"token operator\">::</span><span class=\"token keyword\">class</span> <span class=\"token operator\">=></span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span>\n    <span class=\"token class-name class-name-fully-qualified static-context\"><span class=\"token punctuation\">\\</span>ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Exception<span class=\"token punctuation\">\\</span>FilterValidationException</span><span class=\"token operator\">::</span><span class=\"token keyword\">class</span> <span class=\"token operator\">=></span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span>\n    <span class=\"token class-name class-name-fully-qualified static-context\"><span class=\"token punctuation\">\\</span>Doctrine<span class=\"token punctuation\">\\</span>ORM<span class=\"token punctuation\">\\</span>OptimisticLockException</span><span class=\"token operator\">::</span><span class=\"token keyword\">class</span> <span class=\"token operator\">=></span> <span class=\"token number\">409</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$logger</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Logger</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$phpDocExtractor</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PhpDocExtractor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$reflectionExtractor</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReflectionExtractor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$propertyInfo</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PropertyInfoExtractor</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">[</span><span class=\"token variable\">$reflectionExtractor</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token variable\">$phpDocExtractor</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$reflectionExtractor</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token variable\">$phpDocExtractor</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token variable\">$reflectionExtractor</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token variable\">$reflectionExtractor</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$doctrineAnnotationReader</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AnnotationReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$classMetadataFactory</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ClassMetadataFactory</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">AnnotationLoader</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$doctrineAnnotationReader</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FilterLocator</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ContainerInterface</span> \n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$filters</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">filters</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">??</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">has</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">filter</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token variable\">$apiPlatformAnnotationReader</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$doctrineAnnotationReader</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\\<span class=\"token constant\">PHP_VERSION_ID</span> <span class=\"token operator\">>=</span> <span class=\"token number\">80000</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$apiPlatformAnnotationReader</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token variable\">$filterLocator</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FilterLocator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$resourceNameCollectionFactory</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AnnotationResourceNameCollectionFactory</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$apiPlatformAnnotationReader</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'./src/Entity'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$resourceMetadataFactory</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormatsResourceMetadataFactory</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">OperationResourceMetadataFactory</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ShortNameResourceMetadataFactory</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">InputOutputResourceMetadataFactory</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">AnnotationResourceFilterMetadataFactory</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$apiPlatformAnnotationReader</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AnnotationResourceMetadataFactory</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$apiPlatformAnnotationReader</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$patchFormats</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$formats</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$patchFormats</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$propertyNameCollectionFactory</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">InheritedPropertyNameCollectionFactory</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$resourceNameCollectionFactory</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PropertyInfoPropertyNameCollectionFactory</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$propertyInfo</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$resourceClassResolver</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResourceClassResolver</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$resourceNameCollectionFactory</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$propertyMetadataFactory</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SerializerPropertyMetadataFactory</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$resourceMetadataFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$classMetadataFactory</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">InheritedPropertyMetadataFactory</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$resourceNameCollectionFactory</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PropertyInfoPropertyMetadataFactory</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$propertyInfo</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AnnotationPropertyMetadataFactory</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$apiPlatformAnnotationReader</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceClassResolver</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Validator</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ValidatorInterface</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$validator</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$validator</span><span class=\"token punctuation\">)</span> \n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">validator</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$validator</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">validate</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">array</span> <span class=\"token variable\">$context</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">validator</span><span class=\"token operator\">-></span><span class=\"token function\">validate</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$context</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token variable\">$validator</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Validator</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Validation</span><span class=\"token operator\">::</span><span class=\"token function\">createValidator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$validateListener</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ValidateListener</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$validator</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceMetadataFactory</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">DataProvider</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">DenormalizedIdentifiersAwareItemDataProviderInterface</span><span class=\"token punctuation\">,</span> RestrictedDataProviderInterface<span class=\"token punctuation\">,</span> ContextAwareCollectionDataProviderInterface\n\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getCollection</span><span class=\"token punctuation\">(</span><span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$operationName</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">array</span> <span class=\"token variable\">$context</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$book</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Book</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$book</span><span class=\"token operator\">-></span><span class=\"token property\">id</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'1'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token variable\">$book</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$identifiers</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$operationName</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">array</span> <span class=\"token variable\">$context</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$book</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Book</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$book</span><span class=\"token operator\">-></span><span class=\"token property\">id</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$identifiers</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$book</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">supports</span><span class=\"token punctuation\">(</span><span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$operationName</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">array</span> <span class=\"token variable\">$context</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword return-type\">bool</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token variable\">$dataProvider</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataProvider</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">DataPersister</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">DataPersisterInterface</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">supports</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword return-type\">bool</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">persist</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token variable\">$dataPersister</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataPersister</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$propertyAccessor</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">PropertyAccess</span><span class=\"token operator\">::</span><span class=\"token function\">createPropertyAccessor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$identifiersExtractor</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IdentifiersExtractor</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$propertyNameCollectionFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$propertyMetadataFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$propertyAccessor</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$pathSegmentNameGenerator</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnderscorePathSegmentNameGenerator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token variable\">$operationPathResolver</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OperationPathResolver</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pathSegmentNameGenerator</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$subresourceOperationFactory</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SubresourceOperationFactory</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$resourceMetadataFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$propertyNameCollectionFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$propertyMetadataFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$pathSegmentNameGenerator</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ApiLoader</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$resourceNameCollectionFactory</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$resourceMetadataFactory</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$identifiersExtractor</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$operationPathResolver</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">ResourceNameCollectionFactoryInterface</span> <span class=\"token variable\">$resourceNameCollectionFactory</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">ResourceMetadataFactoryInterface</span> <span class=\"token variable\">$resourceMetadataFactory</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">IdentifiersExtractorInterface</span> <span class=\"token variable\">$identifiersExtractor</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">OperationPathResolverInterface</span> <span class=\"token variable\">$operationPathResolver</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">resourceNameCollectionFactory</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$resourceNameCollectionFactory</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">resourceMetadataFactory</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$resourceMetadataFactory</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">identifiersExtractor</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$identifiersExtractor</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">operationPathResolver</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$operationPathResolver</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token class-name return-type\">RouteCollection</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$routeCollection</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RouteCollection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">resourceNameCollectionFactory</span><span class=\"token operator\">-></span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$resourceMetadata</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">resourceMetadataFactory</span><span class=\"token operator\">-></span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$resourceShortName</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$resourceMetadata</span><span class=\"token operator\">-></span><span class=\"token function\">getShortName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">null</span> <span class=\"token operator\">===</span> <span class=\"token variable\">$resourceShortName</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">InvalidResourceException</span><span class=\"token punctuation\">(</span><span class=\"token function\">sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Resource %s has no short name defined.'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">null</span> <span class=\"token operator\">!==</span> <span class=\"token variable\">$collectionOperations</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$resourceMetadata</span><span class=\"token operator\">-></span><span class=\"token function\">getCollectionOperations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$collectionOperations</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$operationName</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$operation</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">addRoute</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$routeCollection</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$operationName</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$operation</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceMetadata</span><span class=\"token punctuation\">,</span> <span class=\"token class-name static-context\">OperationType</span><span class=\"token operator\">::</span><span class=\"token constant\">COLLECTION</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">null</span> <span class=\"token operator\">!==</span> <span class=\"token variable\">$itemOperations</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$resourceMetadata</span><span class=\"token operator\">-></span><span class=\"token function\">getItemOperations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$itemOperations</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$operationName</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$operation</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">addRoute</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$routeCollection</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$operationName</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$operation</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceMetadata</span><span class=\"token punctuation\">,</span> <span class=\"token class-name static-context\">OperationType</span><span class=\"token operator\">::</span><span class=\"token constant\">ITEM</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$routeCollection</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">function</span> <span class=\"token function\">addRoute</span><span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">RouteCollection</span> <span class=\"token variable\">$routeCollection</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$operationName</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">array</span> <span class=\"token variable\">$operation</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">ResourceMetadata</span> <span class=\"token variable\">$resourceMetadata</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$operationType</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword return-type\">void</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$resourceShortName</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$resourceMetadata</span><span class=\"token operator\">-></span><span class=\"token function\">getShortName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$operation</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'route_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$operation</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'method'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                @<span class=\"token function\">trigger_error</span><span class=\"token punctuation\">(</span><span class=\"token function\">sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Not setting the \"method\" attribute is deprecated and will not be supported anymore in API Platform 3.0, set it for the %s operation \"%s\" of the class \"%s\".'</span><span class=\"token punctuation\">,</span> <span class=\"token class-name static-context\">OperationType</span><span class=\"token operator\">::</span><span class=\"token constant\">COLLECTION</span> <span class=\"token operator\">===</span> <span class=\"token variable\">$operationType</span> <span class=\"token operator\">?</span> <span class=\"token string single-quoted-string\">'collection'</span> <span class=\"token punctuation\">:</span> <span class=\"token string single-quoted-string\">'item'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$operationName</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">E_USER_DEPRECATED</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$operation</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'method'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span><span class=\"token function\">sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Either a \"route_name\" or a \"method\" operation attribute must exist for the operation \"%s\" of the resource \"%s\".'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$operationName</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">null</span> <span class=\"token operator\">===</span> <span class=\"token variable\">$controller</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$operation</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'controller'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">??</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$controller</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">PlaceholderAction</span><span class=\"token operator\">::</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token variable\">$operation</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'identified_by'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">array</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$operation</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'identified_by'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">??</span> <span class=\"token variable\">$resourceMetadata</span><span class=\"token operator\">-></span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'identified_by'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">identifiersExtractor</span> <span class=\"token operator\">?</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">identifiersExtractor</span><span class=\"token operator\">-></span><span class=\"token function\">getIdentifiersFromResourceClass</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$operation</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'has_composite_identifier'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> \\<span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$operation</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'identified_by'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">?</span> <span class=\"token variable\">$resourceMetadata</span><span class=\"token operator\">-></span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'composite_identifier'</span><span class=\"token punctuation\">,</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token class-name return-type\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$path</span> <span class=\"token operator\">=</span> <span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$resourceMetadata</span><span class=\"token operator\">-></span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'route_prefix'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$path</span> <span class=\"token operator\">.=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">operationPathResolver</span><span class=\"token operator\">-></span><span class=\"token function\">resolveOperationPath</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$resourceShortName</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$operation</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$operationType</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$operationName</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token variable\">$route</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Route</span><span class=\"token punctuation\">(</span>\n            <span class=\"token variable\">$path</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">[</span>\n                <span class=\"token string single-quoted-string\">'_controller'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$controller</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string single-quoted-string\">'_format'</span> <span class=\"token operator\">=></span> <span class=\"token constant\">null</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string single-quoted-string\">'_stateless'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$operation</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'stateless'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string single-quoted-string\">'_api_resource_class'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string single-quoted-string\">'_api_identified_by'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$operation</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'identified_by'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string single-quoted-string\">'_api_has_composite_identifier'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$operation</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'has_composite_identifier'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                <span class=\"token function\">sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'_api_%s_operation_name'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$operationType</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$operationName</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$operation</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'defaults'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">??</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token variable\">$operation</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'requirements'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">??</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token variable\">$operation</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'options'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">??</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token variable\">$operation</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'host'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">??</span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">,</span>\n            <span class=\"token variable\">$operation</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'schemes'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">??</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">[</span><span class=\"token variable\">$operation</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'method'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token variable\">$operation</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'condition'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">??</span> <span class=\"token string single-quoted-string\">''</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token variable\">$routeCollection</span><span class=\"token operator\">-></span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">RouteNameGenerator</span><span class=\"token operator\">::</span><span class=\"token function\">generate</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$operationName</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceShortName</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$operationType</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$route</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token variable\">$apiLoader</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ApiLoader</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$resourceNameCollectionFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceMetadataFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$identifiersExtractor</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$operationPathResolver</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$routes</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$apiLoader</span><span class=\"token operator\">-></span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$requestContext</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RequestContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$matcher</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UrlMatcher</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$routes</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$requestContext</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$generator</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UrlGenerator</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$routes</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$requestContext</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Router</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">RouterInterface</span> \n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$routes</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$context</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$matcher</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$generator</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">RouteCollection</span> <span class=\"token variable\">$routes</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">UrlMatcherInterface</span> <span class=\"token variable\">$matcher</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">UrlGeneratorInterface</span> <span class=\"token variable\">$generator</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">RequestContext</span> <span class=\"token variable\">$requestContext</span><span class=\"token punctuation\">)</span> \n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">routes</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$routes</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">matcher</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$matcher</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">generator</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$generator</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">context</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$requestContext</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getRouteCollection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">routes</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token keyword\">match</span><span class=\"token punctuation\">(</span><span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$pathinfo</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">matcher</span><span class=\"token operator\">-></span><span class=\"token keyword\">match</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pathinfo</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">setContext</span><span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">RequestContext</span> <span class=\"token variable\">$context</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">context</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$context</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">context</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">generate</span><span class=\"token punctuation\">(</span><span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">array</span> <span class=\"token variable\">$parameters</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">int</span> <span class=\"token variable\">$referenceType</span> <span class=\"token operator\">=</span> <span class=\"token keyword static-context\">self</span><span class=\"token operator\">::</span><span class=\"token constant\">ABSOLUTE_PATH</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">generator</span><span class=\"token operator\">-></span><span class=\"token function\">generate</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$parameters</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$referenceType</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ApiUrlGenerator</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ApiUrlGeneratorInterface</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$generator</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">UrlGeneratorInterface</span> <span class=\"token variable\">$generator</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">generator</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$generator</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">generate</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$parameters</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$referenceType</span> <span class=\"token operator\">=</span> <span class=\"token keyword static-context\">self</span><span class=\"token operator\">::</span><span class=\"token constant\">ABS_PATH</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">generator</span><span class=\"token operator\">-></span><span class=\"token function\">generate</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$parameters</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$referenceType</span> <span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token keyword static-context\">self</span><span class=\"token operator\">::</span><span class=\"token constant\">ABS_PATH</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token variable\">$apiUrlGenerator</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ApiUrlGenerator</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$generator</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$router</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Router</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$routes</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$matcher</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$generator</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$requestContext</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$routeNameResolver</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RouteNameResolver</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$router</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$identifierDenormalizers</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">IntegerDenormalizer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$identifierConverter</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IdentifierConverter</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$identifiersExtractor</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$propertyMetadataFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$identifierDenormalizers</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceMetadataFactory</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$iriConverter</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IriConverter</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$propertyNameCollectionFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$propertyMetadataFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$dataProvider</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$routeNameResolver</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$router</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$propertyAccessor</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$identifiersExtractor</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">/** SubresourceDataProviderInterface */</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$identifierConverter</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceClassResolver</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceMetadataFactory</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$writeListener</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WriteListener</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dataPersister</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$iriConverter</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceMetadataFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceClassResolver</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$serializerContextBuilder</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SerializerContextBuilder</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$resourceMetadataFactory</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$objectNormalizer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ObjectNormalizer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$nameConverter</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MetadataAwareNameConverter</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$classMetadataFactory</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$jsonLdContextBuilder</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JsonLdContextBuilder</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$resourceNameCollectionFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceMetadataFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$propertyNameCollectionFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$propertyMetadataFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$apiUrlGenerator</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$nameConverter</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$jsonLdItemNormalizer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JsonLdItemNormalizer</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$resourceMetadataFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$propertyNameCollectionFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$propertyMetadataFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$iriConverter</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceClassResolver</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$jsonLdContextBuilder</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$propertyAccessor</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$nameConverter</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$classMetadataFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$defaultContext</span><span class=\"token punctuation\">,</span>  <span class=\"token variable\">$dataTransformers</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">/** resource access checker **/</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$jsonLdObjectNormalizer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JsonLdObjectNormalizer</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$objectNormalizer</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$iriConverter</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$jsonLdContextBuilder</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$jsonLdEncoder</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JsonLdEncoder</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'jsonld'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JsonEncoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$problemConstraintViolationListNormalizer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ProblemConstraintViolationListNormalizer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$nameConverter</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$defaultContext</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$hydraCollectionNormalizer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HydraCollectionNormalizer</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$jsonLdContextBuilder</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceClassResolver</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$iriConverter</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$defaultContext</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$hydraPartialCollectionNormalizer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PartialCollectionViewNormalizer</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$hydraCollectionNormalizer</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$configuration</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'collection'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'pagination'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'page_parameter_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$configuration</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'collection'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'pagination'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'enabled_parameter_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceMetadataFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$propertyAccessor</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$hydraCollectionFiltersNormalizer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CollectionFiltersNormalizer</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$hydraPartialCollectionNormalizer</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceMetadataFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceClassResolver</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$filterLocator</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$hydraErrorNormalizer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HydraErrorNormalizer</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$apiUrlGenerator</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$debug</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$defaultContext</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$hydraEntrypointNormalizer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HydraEntrypointNormalizer</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$resourceMetadataFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$iriConverter</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$apiUrlGenerator</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$hydraDocumentationNormalizer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HydraDocumentationNormalizer</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$resourceMetadataFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$propertyNameCollectionFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$propertyMetadataFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceClassResolver</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$apiUrlGenerator</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">/* SubresourceOperationFactoryInterface */</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$nameConverter</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$hydraConstraintViolationNormalizer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HydraConstraintViolationListNormalizer</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$apiUrlGenerator</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$nameConverter</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$problemErrorNormalizer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ErrorNormalizer</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$debug</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$defaultContext</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$itemNormalizer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ItemNormalizer</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$propertyNameCollectionFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$propertyMetadataFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$iriConverter</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceClassResolver</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$propertyAccessor</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$nameConverter</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$classMetadataFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$dataProvider</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$allowPlainIdentifiers</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$logger</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$dataTransformers</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceMetadataFactory</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">/** resourceAccessChecker **/</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$arrayDenormalizer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayDenormalizer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$problemNormalizer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ProblemNormalizer</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$debug</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$defaultContext</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$jsonserializableNormalizer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JsonSerializableNormalizer</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$classMetadataFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$nameConverter</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$defaultContext</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$dateTimeNormalizer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DateTimeNormalizer</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$defaultContext</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$dataUriNormalizer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataUriNormalizer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$dateIntervalNormalizer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DateIntervalNormalizer</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$defaultContext</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$dateTimeZoneNormalizer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DateTimeZoneNormalizer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$constraintViolationListNormalizer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ConstraintViolationListNormalizer</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$defaultContext</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$nameConverter</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$unwrappingDenormalizer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnwrappingDenormalizer</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$propertyAccessor</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$halItemNormalizer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HalItemNormalizer</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$propertyNameCollectionFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$propertyMetadataFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$iriConverter</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceClassResolver</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$propertyAccessor</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$nameConverter</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$classMetadataFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$dataProvider</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$allowPlainIdentifiers</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$defaultContext</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$dataTransformers</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceMetadataFactory</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">/** resourceAccessChecker **/</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$halEntrypointNormalizer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HalEntrypointNormalizer</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$resourceMetadataFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$iriConverter</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$apiUrlGenerator</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$halCollectionNormalizer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HalCollectionNormalizer</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$resourceClassResolver</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$configuration</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'collection'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'pagination'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'page_parameter_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceMetadataFactory</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$halObjectNormalizer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HalObjectNormalizer</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$objectNormalizer</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$iriConverter</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$openApiNormalizer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OpenApiNormalizer</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$objectNormalizer</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$list</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\"><span class=\"token punctuation\">\\</span>SplPriorityQueue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$list</span><span class=\"token operator\">-></span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$unwrappingDenormalizer</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$list</span><span class=\"token operator\">-></span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$halItemNormalizer</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">890</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$list</span><span class=\"token operator\">-></span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$hydraConstraintViolationNormalizer</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">780</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$list</span><span class=\"token operator\">-></span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$hydraEntrypointNormalizer</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">800</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$list</span><span class=\"token operator\">-></span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$hydraErrorNormalizer</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">800</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$list</span><span class=\"token operator\">-></span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$hydraCollectionFiltersNormalizer</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">800</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$list</span><span class=\"token operator\">-></span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$halEntrypointNormalizer</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">800</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$list</span><span class=\"token operator\">-></span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$halCollectionNormalizer</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">985</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$list</span><span class=\"token operator\">-></span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$halObjectNormalizer</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">995</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$list</span><span class=\"token operator\">-></span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$jsonLdItemNormalizer</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">890</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$list</span><span class=\"token operator\">-></span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$problemConstraintViolationListNormalizer</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">780</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$list</span><span class=\"token operator\">-></span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$problemErrorNormalizer</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">810</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$list</span><span class=\"token operator\">-></span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$jsonLdObjectNormalizer</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">995</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$list</span><span class=\"token operator\">-></span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$constraintViolationListNormalizer</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">915</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$list</span><span class=\"token operator\">-></span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$arrayDenormalizer</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">990</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$list</span><span class=\"token operator\">-></span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dateTimeZoneNormalizer</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">915</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$list</span><span class=\"token operator\">-></span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dateIntervalNormalizer</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">915</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$list</span><span class=\"token operator\">-></span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dataUriNormalizer</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">920</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$list</span><span class=\"token operator\">-></span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dateTimeNormalizer</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">910</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$list</span><span class=\"token operator\">-></span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$jsonserializableNormalizer</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">900</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$list</span><span class=\"token operator\">-></span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$problemNormalizer</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">890</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$list</span><span class=\"token operator\">-></span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$objectNormalizer</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$list</span><span class=\"token operator\">-></span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$itemNormalizer</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">895</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// $list->insert($uuidDenormalizer, -895); //Todo ramsey uuid support ?</span>\n<span class=\"token variable\">$list</span><span class=\"token operator\">-></span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$openApiNormalizer</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">780</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// TODO: JSON-API support</span>\n<span class=\"token comment\">/**\n * api_platform.jsonapi.normalizer.error                       -790       ApiPlatform\\Core\\JsonApi\\Serializer\\ErrorNormalizer\n * api_platform.jsonapi.normalizer.constraint_violation_list   -780       ApiPlatform\\Core\\JsonApi\\Serializer\\ConstraintViolationListNormalizer\n * api_platform.openapi.normalizer.api_gateway                 -780       ApiPlatform\\Core\\Swagger\\Serializer\\ApiGatewayNormalizer\n * api_platform.jsonapi.normalizer.entrypoint                  -800       ApiPlatform\\Core\\JsonApi\\Serializer\\EntrypointNormalizer\n * api_platform.jsonapi.normalizer.collection                  -985       ApiPlatform\\Core\\JsonApi\\Serializer\\CollectionNormalizer\n * api_platform.jsonapi.normalizer.item                        -890       ApiPlatform\\Core\\JsonApi\\Serializer\\ItemNormalizer\n * api_platform.jsonapi.normalizer.object                      -995       ApiPlatform\\Core\\JsonApi\\Serializer\\ObjectNormalizer\n */</span>\n\n<span class=\"token variable\">$encoders</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">JsonEncoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$jsonLdEncoder</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$serializer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Serializer</span><span class=\"token punctuation\">(</span><span class=\"token function\">iterator_to_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$list</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$encoders</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$serializeListener</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SerializeListener</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$serializer</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$serializerContextBuilder</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceMetadataFactory</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$respondListener</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RespondListener</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$resourceMetadataFactory</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$formatListener</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AddFormatListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Negotiator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceMetadataFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$formats</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$readListener</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReadListener</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dataProvider</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$dataProvider</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">/** SubresourceDataProvider **/</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$serializerContextBuilder</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$identifierConverter</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceMetadataFactory</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$deserializeListener</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DeserializeListener</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$serializer</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$serializerContextBuilder</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$formats</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceMetadataFactory</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$addLinkHeaderListener</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AddLinkHeaderListener</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$apiUrlGenerator</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$validationExceptionListener</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ValidationExceptionListener</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$serializer</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$errorFormats</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$exceptionToStatus</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$controller</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ExceptionAction</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$serializer</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$errorFormats</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$exceptionToStatus</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$errorListener</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ErrorListener</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$controller</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$exceptionListener</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ExceptionListener</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$controller</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$debug</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$errorListener</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$dispatcher</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">EventDispatcher</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$dispatcher</span><span class=\"token operator\">-></span><span class=\"token function\">addSubscriber</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">RouterListener</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$matcher</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RequestStack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$dispatcher</span><span class=\"token operator\">-></span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'kernel.view'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token variable\">$validateListener</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'onKernelView'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$dispatcher</span><span class=\"token operator\">-></span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'kernel.view'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token variable\">$writeListener</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'onKernelView'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$dispatcher</span><span class=\"token operator\">-></span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'kernel.view'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token variable\">$serializeListener</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'onKernelView'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// TODO: ApiPlatform\\Core\\EventListener\\QueryParameterValidateListener, prio 16   </span>\n<span class=\"token variable\">$dispatcher</span><span class=\"token operator\">-></span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'kernel.view'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token variable\">$respondListener</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'onKernelView'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$dispatcher</span><span class=\"token operator\">-></span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'kernel.request'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token variable\">$formatListener</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'onKernelRequest'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$dispatcher</span><span class=\"token operator\">-></span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'kernel.request'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token variable\">$readListener</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'onKernelRequest'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$dispatcher</span><span class=\"token operator\">-></span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'kernel.request'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token variable\">$deserializeListener</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'onKernelRequest'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$dispatcher</span><span class=\"token operator\">-></span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'kernel.exception'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token variable\">$validationExceptionListener</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'onKernelException'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// $dispatcher->addListener('kernel.exception', [$exceptionListener, 'onKernelException'], -96);</span>\n<span class=\"token variable\">$dispatcher</span><span class=\"token operator\">-></span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'kernel.response'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token variable\">$addLinkHeaderListener</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'onKernelResponse'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/*\n * TODO: \n * api_platform.security.listener.request.deny_access     kernel.request      onSecurity                  3          ApiPlatform\\Core\\Security\\EventListener\\DenyAccessListener\n *   \"                                                    kernel.request      onSecurityPostDenormalize   1                                                                   \n * api_platform.swagger.listener.ui                       kernel.request      onKernelRequest                        ApiPlatform\\Core\\Bridge\\Symfony\\Bundle\\EventListener\\SwaggerUiListener\n * api_platform.http_cache.listener.response.configure    kernel.response     onKernelResponse            -1         ApiPlatform\\Core\\HttpCache\\EventListener\\AddHeadersListener\n*/</span>\n\n<span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DocumentationAction</span> \n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$openApiFactory</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">OpenApiFactoryInterface</span> <span class=\"token variable\">$openApiFactory</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">openApiFactory</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$openApiFactory</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__invoke</span><span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Request</span> <span class=\"token variable\">$request</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token class-name return-type\">DocumentationInterface</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$context</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'base_url'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$request</span><span class=\"token operator\">-></span><span class=\"token function\">getBaseUrl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'spec_version'</span> <span class=\"token operator\">=></span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$request</span><span class=\"token operator\">-></span><span class=\"token property\">query</span><span class=\"token operator\">-></span><span class=\"token function\">getBoolean</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'api_gateway'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$context</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'api_gateway'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">openApiFactory</span><span class=\"token operator\">-></span><span class=\"token function\">__invoke</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$context</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token variable\">$paginationOptions</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PaginationOptions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$openApiOptions</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OpenApiOptions</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'API Platform'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$jsonSchemaTypeFactory</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TypeFactory</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$resourceClassResolver</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$jsonSchemaFactory</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SchemaFactory</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$jsonSchemaTypeFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceMetadataFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$propertyNameCollectionFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$propertyMetadataFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$nameConverter</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceClassResolver</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$openApiFactory</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OpenApiFactory</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$resourceNameCollectionFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceMetadataFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$propertyNameCollectionFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$propertyMetadataFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$jsonSchemaFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$jsonSchemaTypeFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$operationPathResolver</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$filterLocator</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$subresourceOperationFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$identifiersExtractor</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$formats</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$openApiOptions</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$paginationOptions</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$documentationAction</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DocumentationAction</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$openApiFactory</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$routes</span><span class=\"token operator\">-></span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'api_doc'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Route</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/docs.{_format}'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'_controller'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$documentationAction</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'_format'</span> <span class=\"token operator\">=></span> <span class=\"token constant\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'_api_respond'</span> <span class=\"token operator\">=></span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$entryPointAction</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">EntrypointAction</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$resourceNameCollectionFactory</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$routes</span><span class=\"token operator\">-></span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'api_entrypoint'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Route</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/{index}.{_format}'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'_controller'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$entryPointAction</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'_format'</span> <span class=\"token operator\">=></span> <span class=\"token constant\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'_api_respond'</span> <span class=\"token operator\">=></span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'index'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'index'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'index'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'index'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$contextAction</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ContextAction</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$jsonLdContextBuilder</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceNameCollectionFactory</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceMetadataFactory</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$routes</span><span class=\"token operator\">-></span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'api_jsonld_context'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Route</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/contexts/{shortName}.{_format}'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'_controller'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$contextAction</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'_format'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'jsonld'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'_api_respond'</span> <span class=\"token operator\">=></span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'shortName'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'.+'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$controllerResolver</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ControllerResolver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$argumentResolver</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArgumentResolver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$kernel</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpKernel</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dispatcher</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$controllerResolver</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RequestStack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$argumentResolver</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$request</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">Request</span><span class=\"token operator\">::</span><span class=\"token function\">createFromGlobals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$response</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$kernel</span><span class=\"token operator\">-></span><span class=\"token function\">handle</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$request</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$response</span><span class=\"token operator\">-></span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$kernel</span><span class=\"token operator\">-></span><span class=\"token function\">terminate</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$request</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$response</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></code></pre></div>","nav":{"chapters":[{"title":"The Distribution: Create Powerful APIs with Ease","path":"distribution","items":[{"id":"index","title":"Getting Started With API Platform: Create Your API and Your Jamstack Site","anchors":[{"id":"introduction","title":"Introduction"},{"id":"a-bookshop-api","title":"A Bookshop API"},{"id":"installing-the-framework","title":"Installing the Framework","anchors":[{"id":"using-the-api-platform-distribution-recommended","title":"Using the API Platform Distribution (Recommended)"},{"id":"using-symfony-and-composer","title":"Using Symfony and Composer"}]},{"id":"its-ready","title":"It's Ready"},{"id":"bringing-your-own-model","title":"Bringing your Own Model"},{"id":"plugging-the-persistence-system","title":"Plugging the Persistence System"},{"id":"validating-data","title":"Validating Data"},{"id":"adding-graphql-support","title":"Adding GraphQL Support"},{"id":"the-admin","title":"The Admin"},{"id":"a-nextjs-web-app","title":"A Next.js Web App"},{"id":"hooking-your-own-business-logic","title":"Hooking Your Own Business Logic"},{"id":"other-features","title":"Other Features"},{"id":"screencasts","title":"Screencasts"}]},{"id":"testing","title":"Testing the API","anchors":[{"id":"creating-data-fixtures","title":"Creating Data Fixtures"},{"id":"writing-functional-tests","title":"Writing Functional Tests"},{"id":"writing-unit-tests","title":"Writing Unit Tests"},{"id":"additional-and-alternative-testing-tools","title":"Additional and Alternative Testing Tools"},{"id":"using-the-api-platform-distribution-for-end-to-end-testing","title":"Using the API Platform Distribution for End-to-end Testing"}]},{"id":"debugging","title":"Debugging","anchors":[{"id":"xdebug","title":"Xdebug"},{"id":"add-a-development-stage-to-the-dockerfile","title":"Add a Development Stage to the Dockerfile"},{"id":"configure-xdebug-with-docker-compose-override","title":"Configure Xdebug with Docker Compose Override"},{"id":"troubleshooting","title":"Troubleshooting"}]}]},{"title":"The API Component","path":"core","items":[{"id":"index","title":"The API Platform Core Library","anchors":[{"id":"features","title":"Features"},{"id":"screencasts","title":"Screencasts"}]},{"id":"getting-started","title":"Getting started","anchors":[{"id":"installing-api-platform-core","title":"Installing API Platform Core"},{"id":"before-reading-this-documentation","title":"Before Reading this Documentation"},{"id":"mapping-the-entities","title":"Mapping the Entities","anchors":[{"id":"product","title":"Product"}]}]},{"id":"design","title":"General Design Considerations"},{"id":"extending","title":"Extending API Platform","anchors":[{"id":"doctrine-specific-extension-points","title":"Doctrine Specific Extension Points"},{"id":"leveraging-the-built-in-infrastructure-using-composition","title":"Leveraging the Built-in Infrastructure Using Composition"}]},{"id":"testing","title":"Testing Utilities","anchors":[{"id":"the-test-httpclient","title":"The Test HttpClient"},{"id":"api-test-assertions","title":"API Test Assertions"},{"id":"http-test-assertions","title":"HTTP Test Assertions"}]},{"id":"operations","title":"Operations","anchors":[{"id":"enabling-and-disabling-operations","title":"Enabling and Disabling Operations"},{"id":"configuring-operations","title":"Configuring Operations"},{"id":"prefixing-all-routes-of-all-operations","title":"Prefixing All Routes of All Operations"},{"id":"expose-a-model-without-any-routes","title":"Expose a model without any routes"}]},{"id":"graphql","title":"GraphQL Support","anchors":[{"id":"enabling-graphql","title":"Enabling GraphQL"},{"id":"changing-location-of-the-graphql-endpoint","title":"Changing Location of the GraphQL Endpoint"},{"id":"graphiql","title":"GraphiQL","anchors":[{"id":"add-another-location-for-graphiql","title":"Add another Location for GraphiQL"}]},{"id":"graphql-playground","title":"GraphQL Playground","anchors":[{"id":"add-another-location-for-graphql-playground","title":"Add another Location for GraphQL Playground"}]},{"id":"modifying-or-disabling-the-default-ide","title":"Modifying or Disabling the Default IDE"},{"id":"request-with-applicationgraphql-content-type","title":"Request with application/graphql Content-Type"},{"id":"operations","title":"Operations"},{"id":"queries","title":"Queries","anchors":[{"id":"global-object-identifier","title":"Global Object Identifier"},{"id":"custom-queries","title":"Custom Queries"}]},{"id":"mutations","title":"Mutations","anchors":[{"id":"client-mutation-id","title":"Client Mutation Id"},{"id":"custom-mutations","title":"Custom Mutations"}]},{"id":"subscriptions","title":"Subscriptions","anchors":[{"id":"enable-update-subscriptions-for-a-resource","title":"Enable Update Subscriptions for a Resource"},{"id":"subscribe","title":"Subscribe"},{"id":"receiving-an-update","title":"Receiving an Update"},{"id":"subscriptions-cache","title":"Subscriptions Cache"}]},{"id":"workflow-of-the-resolvers","title":"Workflow of the Resolvers","anchors":[{"id":"disabling-resolver-stages","title":"Disabling Resolver Stages"}]},{"id":"events","title":"Events"},{"id":"filters","title":"Filters","anchors":[{"id":"syntax-for-filters-with-a-list-of-key--value-arguments","title":"Syntax for Filters with a List of Key / Value Arguments"},{"id":"filtering-on-nested-properties","title":"Filtering on Nested Properties"}]},{"id":"pagination","title":"Pagination","anchors":[{"id":"using-the-cursor-based-pagination","title":"Using the Cursor-based Pagination"},{"id":"using-the-page-based-pagination","title":"Using the Page-based Pagination"},{"id":"disabling-the-pagination","title":"Disabling the Pagination","anchors":[{"id":"globally","title":"Globally"},{"id":"for-a-specific-resource","title":"For a Specific Resource"},{"id":"for-a-specific-resource-collection-operation","title":"For a Specific Resource Collection Operation"}]},{"id":"partial-pagination","title":"Partial Pagination"}]},{"id":"security","title":"Security"},{"id":"serialization-groups","title":"Serialization Groups","anchors":[{"id":"different-types-when-using-different-serialization-groups","title":"Different Types when Using Different Serialization Groups"}]},{"id":"exception-and-error","title":"Exception and Error","anchors":[{"id":"handling-exceptions-and-errors-logging-filtering-","title":"Handling Exceptions and Errors (Logging, Filtering, ...)"},{"id":"formatting-exceptions-and-errors","title":"Formatting Exceptions and Errors","anchors":[{"id":"custom-exception-normalizer","title":"Custom Exception Normalizer"}]}]},{"id":"name-conversion","title":"Name Conversion","anchors":[{"id":"nesting-separator","title":"Nesting Separator"}]},{"id":"custom-types","title":"Custom Types"},{"id":"modify-the-extracted-types","title":"Modify the Extracted Types"},{"id":"changing-the-serialization-context-dynamically","title":"Changing the Serialization Context Dynamically"},{"id":"export-the-schema-in-sdl","title":"Export the Schema in SDL"},{"id":"handling-file-upload","title":"Handling File Upload","anchors":[{"id":"configuring-the-entity-receiving-the-uploaded-file","title":"Configuring the Entity Receiving the Uploaded File"},{"id":"resolving-the-file-upload","title":"Resolving the File Upload"},{"id":"using-the-createmediaobject-mutation","title":"Using the createMediaObject Mutation"}]},{"id":"change-default-descriptions","title":"Change Default Descriptions"}]},{"id":"data-providers","title":"Data Providers","anchors":[{"id":"custom-collection-data-provider","title":"Custom Collection Data Provider"},{"id":"custom-item-data-provider","title":"Custom Item Data Provider"},{"id":"injecting-the-serializer-in-an-itemdataprovider","title":"Injecting the Serializer in an ItemDataProvider"},{"id":"injecting-extensions-pagination-filter-eagerloading-etc","title":"Injecting Extensions (Pagination, Filter, EagerLoading etc.)"},{"id":"community-data-providers","title":"Community Data Providers"}]},{"id":"data-persisters","title":"Data Persisters","anchors":[{"id":"creating-a-custom-data-persister","title":"Creating a Custom Data Persister"},{"id":"decorating-the-built-in-data-persisters","title":"Decorating the Built-In Data Persisters"},{"id":"calling-multiple-datapersisters","title":"Calling multiple DataPersisters"}]},{"id":"filters","title":"Filters","anchors":[{"id":"doctrine-orm-and-mongodb-odm-filters","title":"Doctrine ORM and MongoDB ODM Filters","anchors":[{"id":"basic-knowledge","title":"Basic Knowledge"},{"id":"search-filter","title":"Search Filter"},{"id":"date-filter","title":"Date Filter","anchors":[{"id":"managing-null-values","title":"Managing null Values"}]},{"id":"boolean-filter","title":"Boolean Filter"},{"id":"numeric-filter","title":"Numeric Filter"},{"id":"range-filter","title":"Range Filter"},{"id":"exists-filter","title":"Exists Filter","anchors":[{"id":"using-a-custom-exists-query-parameter-name","title":"Using a Custom Exists Query Parameter Name"}]},{"id":"order-filter-sorting","title":"Order Filter (Sorting)","anchors":[{"id":"comparing-with-null-values","title":"Comparing with Null Values"},{"id":"using-a-custom-order-query-parameter-name","title":"Using a Custom Order Query Parameter Name"}]},{"id":"filtering-on-nested-properties","title":"Filtering on Nested Properties"},{"id":"enabling-a-filter-for-all-properties-of-a-resource","title":"Enabling a Filter for All Properties of a Resource"}]},{"id":"elasticsearch-filters","title":"Elasticsearch Filters","anchors":[{"id":"ordering-filter-sorting","title":"Ordering Filter (Sorting)","anchors":[{"id":"using-a-custom-order-query-parameter-name-elastic","title":"Using a Custom Order Query Parameter Name (Elastic)"}]},{"id":"match-filter","title":"Match Filter"},{"id":"term-filter","title":"Term Filter"},{"id":"filtering-on-nested-properties-elastic","title":"Filtering on Nested Properties (Elastic)"}]},{"id":"serializer-filters","title":"Serializer Filters","anchors":[{"id":"group-filter","title":"Group Filter"},{"id":"property-filter","title":"Property filter"}]},{"id":"creating-custom-filters","title":"Creating Custom Filters","anchors":[{"id":"creating-custom-doctrine-orm-filters","title":"Creating Custom Doctrine ORM Filters","anchors":[{"id":"manual-service-and-attribute-registration","title":"Manual Service and Attribute Registration"}]},{"id":"creating-custom-doctrine-mongodb-odm-filters","title":"Creating Custom Doctrine MongoDB ODM Filters"},{"id":"creating-custom-elasticsearch-filters","title":"Creating Custom Elasticsearch Filters"},{"id":"using-doctrine-orm-filters","title":"Using Doctrine ORM Filters"}]},{"id":"apifilter-annotation","title":"ApiFilter Annotation"}]},{"id":"subresources","title":"Subresources","anchors":[{"id":"using-serialization-groups","title":"Using Serialization Groups"},{"id":"using-custom-paths","title":"Using Custom Paths","anchors":[{"id":"access-control-of-subresources","title":"Access Control of Subresources"},{"id":"limiting-depth","title":"Limiting Depth"}]}]},{"id":"serialization","title":"The Serialization Process","anchors":[{"id":"overall-process","title":"Overall Process"},{"id":"available-serializers","title":"Available Serializers"},{"id":"the-serialization-context-groups-and-relations","title":"The Serialization Context, Groups and Relations","anchors":[{"id":"configuration","title":"Configuration"}]},{"id":"using-serialization-groups","title":"Using Serialization Groups"},{"id":"using-serialization-groups-per-operation","title":"Using Serialization Groups per Operation"},{"id":"embedding-relations","title":"Embedding Relations","anchors":[{"id":"normalization","title":"Normalization"},{"id":"denormalization","title":"Denormalization"},{"id":"force-iri-with-relations-of-the-same-type-parentchilds-relations","title":"Force IRI with relations of the same type (parent/childs relations)"}]},{"id":"calculated-field","title":"Calculated Field"},{"id":"changing-the-serialization-context-dynamically","title":"Changing the Serialization Context Dynamically"},{"id":"changing-the-serialization-context-on-a-per-item-basis","title":"Changing the Serialization Context on a Per-item Basis"},{"id":"name-conversion","title":"Name Conversion"},{"id":"decorating-a-serializer-and-adding-extra-data","title":"Decorating a Serializer and Adding Extra Data"},{"id":"entity-identifier-case","title":"Entity Identifier Case"},{"id":"embedding-the-json-ld-context","title":"Embedding the JSON-LD Context"},{"id":"collection-relation","title":"Collection Relation"}]},{"id":"validation","title":"Validation","anchors":[{"id":"validating-submitted-data","title":"Validating Submitted Data"},{"id":"using-validation-groups","title":"Using Validation Groups"},{"id":"using-validation-groups-on-operations","title":"Using Validation Groups on Operations"},{"id":"dynamic-validation-groups","title":"Dynamic Validation Groups"},{"id":"sequential-validation-groups","title":"Sequential Validation Groups"},{"id":"error-levels-and-payload-serialization","title":"Error Levels and Payload Serialization"},{"id":"validation-on-collection-relations","title":"Validation on Collection Relations"},{"id":"open-vocabulary-generated-from-validation-metadata","title":"Open Vocabulary Generated from Validation Metadata"},{"id":"specification-property-restrictions","title":"Specification property restrictions"}]},{"id":"security","title":"Security","anchors":[{"id":"executing-access-control-rules-after-denormalization","title":"Executing Access Control Rules After Denormalization"},{"id":"hooking-custom-permission-checks-using-voters","title":"Hooking Custom Permission Checks Using Voters"},{"id":"configuring-the-access-control-error-message","title":"Configuring the Access Control Error Message"},{"id":"filtering-collection-according-to-the-current-user-permissions","title":"Filtering Collection According to the Current User Permissions"},{"id":"disabling-operations","title":"Disabling Operations"},{"id":"changing-serialization-groups-depending-of-the-current-user","title":"Changing Serialization Groups Depending of the Current User"}]},{"id":"content-negotiation","title":"Content Negotiation","anchors":[{"id":"configuring-formats-globally","title":"Configuring Formats Globally"},{"id":"configuring-patch-formats","title":"Configuring PATCH Formats"},{"id":"configuring-error-formats","title":"Configuring Error Formats"},{"id":"configuring-formats-for-a-specific-resource-or-operation","title":"Configuring Formats For a Specific Resource or Operation"},{"id":"supporting-custom-formats","title":"Supporting Custom Formats","anchors":[{"id":"reusing-the-api-platform-infrastructure","title":"Reusing the API Platform Infrastructure"},{"id":"contributing-support-for-new-formats","title":"Contributing Support for New Formats"}]}]},{"id":"pagination","title":"Pagination","anchors":[{"id":"disabling-the-pagination","title":"Disabling the Pagination","anchors":[{"id":"disabling-the-pagination-globally","title":"Disabling the Pagination Globally"},{"id":"disabling-the-pagination-for-a-specific-resource","title":"Disabling the Pagination For a Specific Resource"},{"id":"disabling-the-pagination-client-side","title":"Disabling the Pagination Client-side","anchors":[{"id":"disabling-the-pagination-client-side-globally","title":"Disabling the Pagination Client-side Globally"},{"id":"disabling-the-pagination-client-side-for-a-specific-resource","title":"Disabling the Pagination Client-side For a Specific Resource"}]}]},{"id":"changing-the-number-of-items-per-page","title":"Changing the Number of Items per Page","anchors":[{"id":"changing-the-number-of-items-per-page-globally","title":"Changing the Number of Items per Page Globally"},{"id":"changing-the-number-of-items-per-page-for-a-specific-resource","title":"Changing the Number of Items per Page For a Specific Resource"},{"id":"changing-the-number-of-items-per-page-client-side","title":"Changing the Number of Items per Page Client-side","anchors":[{"id":"changing-the-number-of-items-per-page-client-side-globally","title":"Changing the Number of Items per Page Client-side Globally"},{"id":"changing-the-number-of-items-per-page-client-side-for-a-specific-resource","title":"Changing the Number of Items per Page Client-side For a Specific Resource"}]}]},{"id":"changing-maximum-items-per-page","title":"Changing Maximum Items Per Page","anchors":[{"id":"changing-maximum-items-per-page-globally","title":"Changing Maximum Items Per Page Globally"},{"id":"changing-maximum-items-per-page-for-a-specific-resource","title":"Changing Maximum Items Per Page For a Specific Resource"},{"id":"changing-maximum-items-per-page-for-a-specific-resource-collection-operation","title":"Changing Maximum Items Per Page For a Specific Resource Collection Operation"}]},{"id":"partial-pagination","title":"Partial Pagination","anchors":[{"id":"partial-pagination-globally","title":"Partial Pagination Globally"},{"id":"partial-pagination-for-a-specific-resource","title":"Partial Pagination For a Specific Resource"},{"id":"partial-pagination-client-side","title":"Partial Pagination Client-side","anchors":[{"id":"partial-pagination-client-side-globally","title":"Partial Pagination Client-side Globally"},{"id":"partial-pagination-client-side-for-a-specific-resource","title":"Partial Pagination Client-side For a Specific Resource"}]}]},{"id":"cursor-based-pagination","title":"Cursor-Based Pagination"},{"id":"controlling-the-behavior-of-the-doctrine-orm-paginator","title":"Controlling The Behavior of The Doctrine ORM Paginator"},{"id":"custom-controller-action","title":"Custom Controller Action"}]},{"id":"deprecations","title":"Deprecating Resources and Properties (Alternative to Versioning)","anchors":[{"id":"deprecating-resource-classes-operations-and-properties","title":"Deprecating Resource Classes, Operations and Properties"},{"id":"setting-the-sunset-http-header-to-indicate-when-a-resource-or-an-operation-will-be-removed","title":"Setting the Sunset HTTP Header to Indicate When a Resource or an Operation Will Be Removed"}]},{"id":"default-order","title":"Overriding Default Order"},{"id":"performance","title":"Performance and Cache","anchors":[{"id":"enabling-the-built-in-http-cache-invalidation-system","title":"Enabling the Built-in HTTP Cache Invalidation System","anchors":[{"id":"extending-cache-tags-for-invalidation","title":"Extending Cache-Tags for Invalidation"}]},{"id":"setting-custom-http-cache-headers","title":"Setting Custom HTTP Cache Headers"},{"id":"enabling-the-metadata-cache","title":"Enabling the Metadata Cache"},{"id":"using-ppm-php-pm","title":"Using PPM (PHP-PM)"},{"id":"doctrine-queries-and-indexes","title":"Doctrine Queries and Indexes","anchors":[{"id":"search-filter","title":"Search Filter"},{"id":"eager-loading","title":"Eager Loading","anchors":[{"id":"max-joins","title":"Max Joins"},{"id":"fetch-partial","title":"Fetch Partial"},{"id":"force-eager","title":"Force Eager"},{"id":"override-at-resource-and-operation-level","title":"Override at Resource and Operation Level"},{"id":"disable-eager-loading","title":"Disable Eager Loading"}]},{"id":"partial-pagination","title":"Partial Pagination"}]},{"id":"profiling-with-blackfireio","title":"Profiling with Blackfire.io"}]},{"id":"extensions","title":"Extensions","anchors":[{"id":"custom-doctrine-orm-extension","title":"Custom Doctrine ORM Extension","anchors":[{"id":"example","title":"Example","anchors":[{"id":"blocking-anonymous-users","title":"Blocking Anonymous Users"}]}]},{"id":"custom-doctrine-mongodb-odm-extension","title":"Custom Doctrine MongoDB ODM Extension"},{"id":"custom-elasticsearch-extension","title":"Custom Elasticsearch Extension"}]},{"id":"messenger","title":"Symfony Messenger Integration: CQRS and Async Message Processing","anchors":[{"id":"installing-symfony-messenger","title":"Installing Symfony Messenger"},{"id":"dispatching-a-resource-through-the-message-bus","title":"Dispatching a Resource through the Message Bus"},{"id":"registering-a-message-handler","title":"Registering a Message Handler"},{"id":"accessing-the-data-returned-by-the-handler","title":"Accessing the Data Returned by the Handler"},{"id":"detecting-removals","title":"Detecting Removals"},{"id":"using-messenger-with-an-input-object","title":"Using Messenger with an Input Object"}]},{"id":"dto","title":"Using Data Transfer Objects (DTOs)","anchors":[{"id":"specifying-an-input-or-an-output-data-representation","title":"Specifying an Input or an Output Data Representation"},{"id":"updating-a-resource-with-a-custom-input","title":"Updating a Resource with a Custom Input"},{"id":"disabling-the-input-or-the-output","title":"Disabling the Input or the Output"},{"id":"per-operation-input-and-output","title":"Per Operation input and output"},{"id":"inputoutput-metadata","title":"Input/Output Metadata"},{"id":"using-objects-as-relations-inside-resources","title":"Using Objects As Relations Inside Resources"},{"id":"validating-data-transfer-objects","title":"Validating Data Transfer Objects"}]},{"id":"openapi","title":"OpenAPI Specification Support (formerly Swagger)","anchors":[{"id":"using-the-openapi-command","title":"Using the OpenAPI Command"},{"id":"overriding-the-openapi-specification","title":"Overriding the OpenAPI Specification"},{"id":"using-the-openapi-and-swagger-contexts","title":"Using the OpenAPI and Swagger Contexts"},{"id":"changing-the-name-of-a-definition","title":"Changing the Name of a Definition"},{"id":"changing-operations-in-the-openapi-documentation","title":"Changing Operations in the OpenAPI Documentation"},{"id":"changing-the-location-of-swagger-ui","title":"Changing the Location of Swagger UI","anchors":[{"id":"disabling-swagger-ui-or-redoc","title":"Disabling Swagger UI or ReDoc"},{"id":"manually-registering-the-swagger-ui-controller","title":"Manually Registering the Swagger UI Controller"}]},{"id":"using-a-custom-asset-package-in-swagger-ui","title":"Using a custom Asset Package in Swagger UI"},{"id":"overriding-the-ui-template","title":"Overriding the UI Template"},{"id":"compatibility-layer-with-amazon-api-gateway","title":"Compatibility Layer with Amazon API Gateway"},{"id":"oauth","title":"OAuth"},{"id":"info-object","title":"Info Object"}]},{"id":"json-schema","title":"JSON Schema Support","anchors":[{"id":"generating-a-json-schema","title":"Generating a JSON Schema"},{"id":"generating-a-json-schema-programmatically","title":"Generating a JSON Schema Programmatically"},{"id":"testing","title":"Testing"}]},{"id":"mercure","title":"Creating Async APIs using the Mercure Protocol","anchors":[{"id":"installing-mercure-support","title":"Installing Mercure Support"},{"id":"pushing-the-api-updates","title":"Pushing the API Updates"},{"id":"dispatching-private-updates-authorized-mode","title":"Dispatching Private Updates (Authorized Mode)"},{"id":"available-options","title":"Available Options"}]},{"id":"push-relations","title":"Pushing Related Resources Using HTTP/2"},{"id":"errors","title":"Errors Handling","anchors":[{"id":"converting-php-exceptions-to-http-errors","title":"Converting PHP Exceptions to HTTP Errors"}]},{"id":"external-vocabularies","title":"Using External Vocabularies"},{"id":"operation-path-naming","title":"Operation Path Naming","anchors":[{"id":"configuration","title":"Configuration"},{"id":"create-a-custom-operation-path-resolver","title":"Create a Custom Operation Path Resolver","anchors":[{"id":"defining-the-operation-segment-name-generator","title":"Defining the Operation Segment Name Generator"},{"id":"registering-the-service","title":"Registering the Service"},{"id":"configuring-it","title":"Configuring It"}]}]},{"id":"extending-jsonld-context","title":"Extending JSON-LD AND Hydra Contexts","anchors":[{"id":"json-ld","title":"JSON-LD"},{"id":"hydra","title":"Hydra"}]},{"id":"identifiers","title":"Identifiers","anchors":[{"id":"custom-identifier-normalizer","title":"Custom Identifier Normalizer"},{"id":"changing-identifier-in-a-doctrine-entity","title":"Changing Identifier in a Doctrine Entity"},{"id":"supported-identifiers","title":"Supported Identifiers"}]},{"id":"mongodb","title":"MongoDB Support","anchors":[{"id":"overview","title":"Overview"},{"id":"enabling-mongodb-support","title":"Enabling MongoDB Support"},{"id":"creating-documents","title":"Creating Documents"},{"id":"filtering","title":"Filtering"},{"id":"creating-custom-extensions","title":"Creating Custom Extensions"},{"id":"adding-execute-options","title":"Adding Execute Options"}]},{"id":"elasticsearch","title":"Elasticsearch Support","anchors":[{"id":"overview","title":"Overview"},{"id":"enabling-reading-support","title":"Enabling Reading Support"},{"id":"creating-models","title":"Creating Models","anchors":[{"id":"creating-custom-mapping","title":"Creating custom mapping"}]},{"id":"filtering","title":"Filtering"},{"id":"creating-custom-extensions","title":"Creating Custom Extensions"}]},{"id":"controllers","title":"Creating Custom Operations and Controllers","anchors":[{"id":"using-serialization-groups","title":"Using Serialization Groups"},{"id":"retrieving-the-entity","title":"Retrieving the Entity"},{"id":"alternative-method","title":"Alternative Method"}]},{"id":"events","title":"The Event System","anchors":[{"id":"built-in-event-listeners","title":"Built-in Event Listeners"},{"id":"custom-event-listeners","title":"Custom Event Listeners"}]},{"id":"file-upload","title":"Handling File Upload","anchors":[{"id":"installing-vichuploaderbundle","title":"Installing VichUploaderBundle"},{"id":"configuring-the-entity-receiving-the-uploaded-file","title":"Configuring the Entity Receiving the Uploaded File"},{"id":"the-controller","title":"The Controller"},{"id":"resolving-the-file-url","title":"Resolving the File URL"},{"id":"making-a-request-to-the-media_objects-endpoint","title":"Making a Request to the /media_objects Endpoint"},{"id":"linking-a-mediaobject-resource-to-another-resource","title":"Linking a MediaObject Resource to Another Resource"}]},{"id":"jwt","title":"JWT Authentication","anchors":[{"id":"installing-lexikjwtauthenticationbundle","title":"Installing LexikJWTAuthenticationBundle"},{"id":"configuring-the-symfony-securitybundle","title":"Configuring the Symfony SecurityBundle","anchors":[{"id":"adding-authentication-to-an-api-which-uses-a-path-prefix","title":"Adding Authentication to an API Which Uses a Path Prefix"}]},{"id":"documenting-the-authentication-mechanism-with-swaggeropen-api","title":"Documenting the Authentication Mechanism with Swagger/Open API","anchors":[{"id":"configuring-api-platform","title":"Configuring API Platform"},{"id":"adding-a-new-api-key","title":"Adding a New API Key"},{"id":"adding-endpoint-to-swaggerui-to-retrieve-a-jwt-token","title":"Adding endpoint to SwaggerUI to retrieve a JWT token"}]},{"id":"testing","title":"Testing"}]},{"id":"form-data","title":"Accept application/x-www-form-urlencoded Form Data","anchors":[{"id":"create-your-deserializelistener-decorator","title":"Create your DeserializeListener Decorator"},{"id":"creating-the-service-definition","title":"Creating the Service Definition"}]},{"id":"angularjs-integration","title":"AngularJS Integration","anchors":[{"id":"restangular","title":"Restangular"},{"id":"ng-admin","title":"ng-admin"}]},{"id":"fosuser-bundle","title":"FOSUserBundle Integration","anchors":[{"id":"️-deprecated-this-integration-is-deprecated-and-will-be-removed-in-api-platform-3","title":"⚠️ Deprecated: this integration is deprecated and will be removed in API Platform 3"},{"id":"installing-the-bundle","title":"Installing the Bundle"},{"id":"enabling-the-bridge","title":"Enabling the Bridge"},{"id":"creating-a-user-entity-with-serialization-groups","title":"Creating a User Entity with Serialization Groups"}]},{"id":"nelmio-api-doc","title":"NelmioApiDocBundle Integration"},{"id":"bootstrap","title":"Bootstraping the core library"},{"id":"configuration","title":"Configuration","anchors":[{"id":"global-resources-defaults","title":"Global Resources Defaults"}]}]},{"title":"The Schema Generator Component","path":"schema-generator","items":[{"id":"index","title":"The Schema Generator","anchors":[{"id":"what-is-schemaorg","title":"What Is Schema.org?"},{"id":"why-use-schemaorg-data-to-generate-a-php-model","title":"Why Use Schema.org Data to Generate a PHP Model?","anchors":[{"id":"dont-reinvent-the-wheel","title":"Don't Reinvent the Wheel"},{"id":"improve-seo-and-user-experience","title":"Improve SEO and User Experience"},{"id":"be-ready-for-the-future","title":"Be Ready for The Future"}]},{"id":"documentation","title":"Documentation"}]},{"id":"getting-started","title":"Getting Started","anchors":[{"id":"installation","title":"Installation"},{"id":"model-scaffolding","title":"Model Scaffolding","anchors":[{"id":"going-further","title":"Going Further"}]},{"id":"cardinality-extraction","title":"Cardinality Extraction"}]},{"id":"configuration","title":"Configuration","anchors":[{"id":"customizing-php-namespaces","title":"Customizing PHP Namespaces"},{"id":"forcing-a-field-range","title":"Forcing a Field Range"},{"id":"forcing-a-field-cardinality","title":"Forcing a Field Cardinality"},{"id":"forcing-a-relation-table-name","title":"Forcing a Relation Table Name"},{"id":"forcing-or-disabling-a-class-parent","title":"Forcing (or Disabling) a Class Parent"},{"id":"forcing-a-class-to-be-abstract","title":"Forcing a Class to be Abstract"},{"id":"forcing-a-nullable-property","title":"Forcing a Nullable Property"},{"id":"forcing-a-unique-property","title":"Forcing a Unique Property"},{"id":"making-a-property-read-only","title":"Making a Property Read-Only"},{"id":"making-a-property-write-only","title":"Making a Property Write-Only"},{"id":"forcing-a-property-to-be-in-a-serialization-group","title":"Forcing a Property to be in a Serialization Group"},{"id":"forcing-an-embeddable-class-to-be-embedded","title":"Forcing an Embeddable Class to be Embedded"},{"id":"author-phpdoc","title":"Author PHPDoc"},{"id":"disabling-generators-and-creating-custom-ones","title":"Disabling Generators and Creating Custom Ones"},{"id":"skipping-accessor-method-generation","title":"Skipping Accessor Method Generation"},{"id":"disabling-the-id-generator","title":"Disabling the id Generator"},{"id":"generating-uuids","title":"Generating UUIDs"},{"id":"user-submitted-uuids","title":"User submitted UUIDs"},{"id":"generating-custom-ids","title":"Generating Custom IDs"},{"id":"disabling-usage-of-doctrine-collections","title":"Disabling Usage of Doctrine Collections"},{"id":"changing-the-field-visibility","title":"Changing the Field Visibility"},{"id":"generating-asserttype-annotations","title":"Generating @Assert\\Type Annotations"},{"id":"forcing-doctrine-inheritance-mapping-annotation","title":"Forcing Doctrine Inheritance Mapping Annotation"},{"id":"interfaces-and-doctrine-resolve-target-entity-listener","title":"Interfaces and Doctrine Resolve Target Entity Listener"},{"id":"custom-schemas","title":"Custom Schemas"},{"id":"checking-goodrelation-compatibility","title":"Checking GoodRelation Compatibility"},{"id":"php-file-header","title":"PHP File Header"},{"id":"full-configuration-reference","title":"Full Configuration Reference"}]}]},{"title":"The Admin Component","path":"admin","items":[{"id":"index","title":"The API Platform Admin","anchors":[{"id":"features","title":"Features"}]},{"id":"getting-started","title":"Getting Started","anchors":[{"id":"installation","title":"Installation"},{"id":"creating-the-admin","title":"Creating the Admin"}]},{"id":"handling-relations","title":"Handling Relations","anchors":[{"id":"embedded-relations","title":"Embedded Relations"},{"id":"display-a-field-of-an-embedded-relation","title":"Display a Field of an Embedded Relation"},{"id":"using-an-autocomplete-input-for-relations","title":"Using an Autocomplete Input for Relations"}]},{"id":"schema.org","title":"Using the Schema.org Vocabulary","anchors":[{"id":"displaying-related-resources-name-instead-of-its-iri","title":"Displaying Related Resource's Name Instead of its IRI"},{"id":"emails-urls-and-identifiers","title":"Emails, URLs and Identifiers"}]},{"id":"validation","title":"Validation","anchors":[{"id":"client-side-validation","title":"Client-side Validation"},{"id":"server-side-validation","title":"Server-side Validation"}]},{"id":"authentication-support","title":"Authentication Support"},{"id":"file-upload","title":"Handling File Upload"},{"id":"performance","title":"Performance","anchors":[{"id":"retrieve-all-relations-in-one-request","title":"Retrieve All Relations in One Request"}]},{"id":"customizing","title":"Customizing the Admin","anchors":[{"id":"customizing-the-admins-main-page-and-the-resource-list","title":"Customizing the Admin's Main Page and the Resource List"},{"id":"customizing-the-list-view","title":"Customizing the List View"},{"id":"customizing-the-show-view","title":"Customizing the Show View"},{"id":"customizing-the-create-form","title":"Customizing the Create Form"},{"id":"customizing-the-edit-form","title":"Customizing the Edit Form"},{"id":"going-further","title":"Going Further"}]},{"id":"components","title":"Components","anchors":[{"id":"resource-components","title":"Resource Components","anchors":[{"id":"adminguesser","title":"AdminGuesser","anchors":[{"id":"props","title":"Props"}]},{"id":"resourceguesser","title":"ResourceGuesser","anchors":[{"id":"resourceguesser-props","title":"ResourceGuesser Props"}]}]},{"id":"page-components","title":"Page Components","anchors":[{"id":"listguesser","title":"ListGuesser","anchors":[{"id":"listguesser-props","title":"ListGuesser Props"}]},{"id":"createguesser","title":"CreateGuesser","anchors":[{"id":"createguesser-props","title":"CreateGuesser Props"}]},{"id":"editguesser","title":"EditGuesser","anchors":[{"id":"editguesser-props","title":"EditGuesser Props"}]},{"id":"showguesser","title":"ShowGuesser","anchors":[{"id":"showguesser-props","title":"ShowGuesser Props"}]}]},{"id":"hydra","title":"Hydra","anchors":[{"id":"hydraadmin","title":"HydraAdmin","anchors":[{"id":"hydraadmin-props","title":"HydraAdmin Props"}]},{"id":"data-provider","title":"Data Provider"},{"id":"schema-analyzer","title":"Schema Analyzer"}]},{"id":"other-components","title":"Other Components","anchors":[{"id":"pagination","title":"Pagination"},{"id":"fieldguesser","title":"FieldGuesser","anchors":[{"id":"fieldguesser-props","title":"FieldGuesser Props"}]},{"id":"inputguesser","title":"InputGuesser","anchors":[{"id":"inputguesser-props","title":"InputGuesser Props"}]}]}]}]},{"title":"The Client Generator Component","path":"client-generator","items":[{"id":"index","title":"The API Platform Client Generator","anchors":[{"id":"generated-react-and-react-native-apps-updated-in-real-time","title":"Generated React and React Native Apps, Updated in Real Time"},{"id":"features","title":"Features"}]},{"id":"nextjs","title":"Next.js Generator","anchors":[{"id":"install","title":"Install","anchors":[{"id":"next--express-server","title":"Next + Express Server"},{"id":"installing-the-generator-dependencies","title":"Installing the Generator Dependencies"}]},{"id":"generating-routes","title":"Generating Routes"},{"id":"starting-the-project","title":"Starting the Project"},{"id":"screenshots","title":"Screenshots"}]},{"id":"nuxtjs","title":"Nuxt.js Generator","anchors":[{"id":"install","title":"Install","anchors":[{"id":"nuxt","title":"Nuxt"},{"id":"installing-the-generator-dependencies","title":"Installing the Generator Dependencies"}]},{"id":"updating-nuxtjs-config","title":"Updating nuxtjs config"},{"id":"generating-routes","title":"Generating Routes"},{"id":"updating-default-layout","title":"Updating default layout"},{"id":"starting-the-project","title":"Starting the Project"},{"id":"screenshots","title":"Screenshots"}]},{"id":"vuetify","title":"Vuetify Generator","anchors":[{"id":"install-with-docker","title":"Install with Docker"},{"id":"install-without-docker","title":"Install without Docker"},{"id":"generating-the-vuejs-web-app","title":"Generating the VueJS Web App"}]},{"id":"quasar","title":"Quasar Framework Generator"},{"id":"react","title":"React Generator","anchors":[{"id":"install","title":"Install"},{"id":"generating-a-progressive-web-app","title":"Generating a Progressive Web App"},{"id":"screenshots","title":"Screenshots"}]},{"id":"react-native","title":"React Native generator","anchors":[{"id":"install","title":"Install"},{"id":"generating-a-native-app","title":"Generating a Native App"},{"id":"screenshots-in-ios-simulator","title":"Screenshots in iOS Simulator"}]},{"id":"vuejs","title":"Vue.js Generator"},{"id":"typescript","title":"TypeScript Interfaces","anchors":[{"id":"example","title":"Example"}]},{"id":"troubleshooting","title":"Troubleshooting","anchors":[{"id":"self-signed-tls-certificate","title":"Self-Signed TLS Certificate"},{"id":"authenticated-api","title":"Authenticated API"},{"id":"apidocumentation-doesnt-exist","title":"ApiDocumentation doesn't exist"},{"id":"cannot-read-property-type","title":"Cannot read property '@type'"},{"id":"dereferencing-a-url-did-not-result-in-a-json-object","title":"Dereferencing a URL did not result in a JSON object"},{"id":"docker-distribution-on-windows-and-hot-reloading","title":"Docker distribution on Windows and hot-reloading"}]}]},{"title":"Deployment","path":"deployment","items":[{"id":"index","title":"Deploying API Platform Applications"},{"id":"kubernetes","title":"Deploying to a Kubernetes Cluster","anchors":[{"id":"preparing-your-cluster-and-your-local-machine","title":"Preparing Your Cluster and Your Local Machine"},{"id":"creating-and-publishing-the-docker-images","title":"Creating and Publishing the Docker Images"},{"id":"deploying","title":"Deploying"},{"id":"initializing-the-database","title":"Initializing the Database"},{"id":"tiller-rbac-issue","title":"Tiller RBAC Issue"}]},{"id":"docker-compose","title":"Deploying with Docker Compose","anchors":[{"id":"installing-the-docker-compose-setup-for-production","title":"Installing the Docker Compose Setup for Production"},{"id":"building-and-pushing-the-docker-images","title":"Building and Pushing the Docker Images"},{"id":"pulling-the-docker-images-and-running-the-services","title":"Pulling the Docker Images and Running the Services"},{"id":"running-the-docker-compose-setup-for-production-locally","title":"Running the Docker Compose Setup for Production Locally"}]},{"id":"heroku","title":"Deploying an API Platform App on Heroku"},{"id":"traefik","title":"Implement Træfik Into API Platform Dockerized","anchors":[{"id":"basic-implementation","title":"Basic Implementation"},{"id":"known-issues","title":"Known Issues"},{"id":"going-further","title":"Going Further"},{"id":"multiple-instances","title":"Multiple Instances"},{"id":"more-generic-approach","title":"More Generic Approach"}]}]},{"title":"General Information","path":"extra","items":[{"id":"philosophy","title":"API Platform's Philosophy"},{"id":"releases","title":"The Release Process"},{"id":"enterprise","title":"API Platform for Enterprise","anchors":[{"id":"enterprise-ready-open-source-softwaremanaged-for-you","title":"Enterprise-ready open source software—managed for you"}]},{"id":"security","title":"Security Policy","anchors":[{"id":"reporting-a-security-issue","title":"Reporting a Security Issue"},{"id":"resolving-process","title":"Resolving Process"},{"id":"security-updates-with-tidelift","title":"Security Updates With Tidelift"},{"id":"issue-severity","title":"Issue Severity","anchors":[{"id":"attack-complexity","title":"Attack Complexity"},{"id":"impact","title":"Impact"},{"id":"affected-projects","title":"Affected Projects"},{"id":"score-totals","title":"Score Totals"},{"id":"severity-levels","title":"Severity levels"}]},{"id":"credits","title":"Credits"}]},{"id":"troubleshooting","title":"Troubleshooting","anchors":[{"id":"using-docker","title":"Using Docker","anchors":[{"id":"with-docker-toolbox-on-windows","title":"With Docker Toolbox on Windows"},{"id":"error-starting-the-web-server","title":"Error Starting The Web Server"}]},{"id":"using-api-platform-and-jms-serializer-in-the-same-project","title":"Using API Platform and JMS Serializer in the same project"},{"id":"upstream-sent-too-big-header-while-reading-response-header-from-upstream-nginx-502-error","title":"\"upstream sent too big header while reading response header from upstream\" NGINX 502 Error"}]},{"id":"contribution-guides","title":"Contribution guides"},{"id":"conduct","title":"Contributor Code of Conduct","anchors":[{"id":"our-pledge","title":"Our Pledge"},{"id":"our-standards","title":"Our Standards"},{"id":"our-responsibilities","title":"Our Responsibilities"},{"id":"scope","title":"Scope"},{"id":"enforcement","title":"Enforcement"},{"id":"attribution","title":"Attribution"}]}]}]},"next":{"slug":"/docs/core/configuration/","title":"Configuration"},"prefixedVersion":"current","previous":{"slug":"/docs/core/nelmio-api-doc/","title":"NelmioApiDocBundle Integration"},"title":"Bootstraping the core library","urlEditDocumentation":"https://github.com/api-platform/docs/edit/2.6/core/bootstrap.md","version":""}},"staticQueryHashes":["1552981879"]}